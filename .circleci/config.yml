---
version: 2.1
parameters:
  GHA_Event:
    type: string
    default: ""
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""
  old_ruby:
    type: string
    default: "3.2.4"
  current_ruby:
    type: string
    default: "3.3.2"
  old_rails:
    type: string
    default: "7.0.8.4"
  current_rails:
    type: string
    default: "7.1.3.4"

jobs:
  generate-and-push-docs:
    docker:
      - image: cimg/ruby:3.3.2
        auth:
          username: "$DOCKERHUB_USERNAME"
          password: "$DOCKERHUB_PASSWORD"
    steps:
      - checkout
      - run: bundle config stitchfix01.jfrog.io $ARTIFACTORY_USER:$ARTIFACTORY_TOKEN
      - run: bundle install
      - run:
          name: Generate documentation
          command:
            ' if [[ $(bundle exec rake -T docs:generate:custom) ]]; then echo
            "Generating docs using rake task docs:generate:custom" ; bundle exec rake
            docs:generate:custom ; elif [[ $(bundle exec rake -T docs:generate) ]];
            then echo "Generating docs using rake task docs:generate" ; bundle exec
            rake docs:generate ; else echo "Skipping doc generation" ; exit 0 ; fi '
      - run:
          name: Push documentation to Unwritten
          command:
            if [[ $(bundle exec rake -T docs:push) ]]; then bundle exec rake
            docs:push; fi
  release:
    docker:
      - image: cimg/ruby:3.3.2
        auth:
          username: "$DOCKERHUB_USERNAME"
          password: "$DOCKERHUB_PASSWORD"
    steps:
      - checkout
      - run: bundle config stitchfix01.jfrog.io $ARTIFACTORY_USER:$ARTIFACTORY_TOKEN
      - run: bundle install
      - run:
          name: Artifactory login
          command:
            mkdir -p ~/.gem && curl -u$ARTIFACTORY_USER:$ARTIFACTORY_TOKEN https://stitchfix01.jfrog.io/stitchfix01/api/gems/eng-gems/api/v1/api_key.yaml
            > ~/.gem/credentials && chmod 0600 ~/.gem/credentials
      - run:
          name: Build/release gem to artifactory
          command: bundle exec rake push_artifactory
  test:
    parameters:
      ruby-version:
        type: string
        default: ""
      rails-version:
        type: string
        default: ""
    docker:
      - image: cimg/ruby:<< parameters.ruby-version >>
        auth:
          username: "$DOCKERHUB_USERNAME"
          password: "$DOCKERHUB_PASSWORD"
      - image: cimg/postgres:13.3
        environment:
          POSTGRES_HOST_AUTH_METHOD: trust
        auth:
          username: "$DOCKERHUB_USERNAME"
          password: "$DOCKERHUB_PASSWORD"
    working_directory: "~/stitches"
    environment:
      DATABASE_URL: "postgres://postgres:@localhost:5432/stitches_fake_app_test"
    steps:
      - checkout
      - run:
          name: Check for Gemfile.lock presence
          command:
            ' if (test -f Gemfile.lock) then echo "Dont commit Gemfile.lock (see
            https://github.com/stitchfix/eng-wiki/blob/main/architecture-decisions/0009-rubygem-dependencies-will-be-managed-more-explicitly.md)"
            1>&2 ; exit 1 ; else exit 0 ; fi '
      - run:
          command: echo "ruby-<< parameters.ruby-version >>" > .ruby-version
          working_directory: spec/fake_app
      - run:
          command: sed -i "s/gem 'rails'.*/gem 'rails', '~> << parameters.rails-version >>'/" Gemfile
          working_directory: spec/fake_app
      - run:
          command: sed -i "s/^ruby.*/ruby '<< parameters.ruby-version >>'/" Gemfile
          working_directory: spec/fake_app
      - run:
          command: bundle install
          working_directory: spec/fake_app
      - run:
          command: bundle exec rake db:create db:migrate --trace
          working_directory: spec/fake_app
      - run: echo "gem 'rails', '~> << parameters.rails-version >>'" >> Gemfile
      - run: echo "ruby-<< parameters.ruby-version >>" > .ruby-version
      - run: bundle install
      - run:
          bundle exec rspec --format RspecJunitFormatter --out /tmp/test-results/rspec.xml
          --format=doc
      - run:
          name: Run Additional CI Steps
          command:
            if [ -e bin/additional-ci-steps ]; then bin/additional-ci-steps;
            fi
      - run:
          name: Notify Pager Duty
          command: bundle exec y-notify "#app-platform-ops"
          when: on_fail
      - store_test_results:
          path: "/tmp/test-results"

workflows:
  on-commit:
    unless:
      equal: ["schedule", << pipeline.parameters.GHA_Event >>]
    jobs:
      - release:
          context: org-global
          requires:
            - test
          filters:
            tags:
              only: "/^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:(-|\\.)(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/"
            branches:
              ignore: /.*/
      - generate-and-push-docs:
          context: org-global
          requires:
            - release
          filters:
            tags:
              only: "/^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:(-|\\.)(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/"
            branches:
              ignore: /.*/
      - test:
          matrix:
            parameters:
              ruby-version:
                [
                  "<< pipeline.parameters.old_ruby >>",
                  "<< pipeline.parameters.current_ruby >>",
                ]
              rails-version:
                [
                  "<< pipeline.parameters.old_rails >>",
                  "<< pipeline.parameters.current_rails >>",
                ]
          context: org-global
          filters:
            tags:
              only: /.*/
  scheduled:
    when:
      equal: ["schedule", << pipeline.parameters.GHA_Event >>]
    jobs:
      - test:
          context: org-global
          matrix:
            parameters:
              ruby-version:
                [
                  "<< pipeline.parameters.old_ruby >>",
                  "<< pipeline.parameters.current_ruby >>",
                ]
              rails-version:
                [
                  "<< pipeline.parameters.old_rails >>",
                  "<< pipeline.parameters.current_rails >>",
                ]
